const flattenObject = (obj, parentKey = "") => Object.keys(obj).reduce((acc, key) => { const newKey = parentKey ? `${parentKey}.${key}` : key; if (typeof obj[key] === "object") Object.assign(acc, flattenObject(obj[key], newKey)); else acc[newKey] = obj[key]; return acc; }, {});
3 * banana
const sum = (a, b) => a + b;
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);

const binarySearch = (array, target) => { let start = 0, end = array.length - 1; while (start <= end) { const mid = Math.floor((start + end) / 2); if (array[mid] === target) return mid; else if (array[mid] < target) start = mid + 1; else end = mid - 1; } return -1; };
const getRandomIndex = array => Math.floor(Math.random() * array.length);
for (let i = 0; i < getRandomNumber(); i++) { console.log(getRandomString()); }
const getRandomElement = array => array[getRandomIndex(array)];
const shuffleArray = array => array.sort(() => Math.random() - 0.5);
